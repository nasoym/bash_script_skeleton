#!/usr/bin/env bash

set -o errexit  # abort when any commands exits with error
set -o pipefail # abort when any command in a pipe exits with error
set -o nounset  # abort when any unset variable is used
set -o errtrace # inherits trap on ERR in function and subshell
set -f # prevent bash from expanding glob
trap 'echo status:$? line:$LINENO line:$BASH_LINENO command:"$BASH_COMMAND" functions:$(printf " %s" ${FUNCNAME[@]:-})' ERR

if [[ "${trace:=0}" -eq 1 ]];then
  PS4='${LINENO}: '
  set -x
  export trace
fi

while getopts "mh?" options; do case $options in
  m) no_main="1" ;;
  h|?) help; exit ;;
esac; done; shift $((OPTIND - 1))

: ${no_main:=0}

a() {
  echo "function a: $@"
}

b() {
  echo "function b: $@"
  false
  echo "danach"
}

c() {
  echo "function c: $@"
}

my_main() {
  a abc $@
  b def $@
  c ghi
}

if [[ "$0" == "${BASH_SOURCE}" ]] ; then # not sourced
  if [[ "${no_main}" -eq 0 ]]; then
    my_main $@
  elif [[ "$(type -t ${1:-""})" == "function" ]];then
    $@
  fi
fi

